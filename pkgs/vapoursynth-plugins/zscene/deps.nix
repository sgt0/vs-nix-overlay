# generated by zon2nix (https://github.com/Cloudef/zig2nix)
{
  lib,
  linkFarm,
  fetchurl,
  fetchgit,
  runCommandLocal,
  zig,
  name ? "zig-packages",
}:
with builtins;
with lib; let
  unpackZigArtifact = {
    name,
    artifact,
  }:
    runCommandLocal name {nativeBuildInputs = [zig];} ''
      hash="$(zig fetch --global-cache-dir "$TMPDIR" ${artifact})"
      mv "$TMPDIR/p/$hash" "$out"
      chmod 755 "$out"
    '';

  fetchZig = {
    name,
    url,
    hash,
  }: let
    artifact = fetchurl {inherit url hash;};
  in
    unpackZigArtifact {inherit name artifact;};

  fetchGitZig = {
    name,
    url,
    hash,
    rev ? throw "rev is required, remove and regenerate the zon2json-lock file",
  }: let
    parts = splitString "#" url;
    url_base = elemAt parts 0;
    url_without_query = elemAt (splitString "?" url_base) 0;
  in
    fetchgit {
      inherit name rev hash;
      url = url_without_query;
      deepClone = false;
    };

  fetchZigArtifact = {
    name,
    url,
    hash,
    ...
  } @ args: let
    parts = splitString "://" url;
    proto = elemAt parts 0;
    path = elemAt parts 1;
    fetcher = {
      "git+http" = fetchGitZig (
        args
        // {
          url = "http://${path}";
        }
      );
      "git+https" = fetchGitZig (
        args
        // {
          url = "https://${path}";
        }
      );
      http = fetchZig {
        inherit name hash;
        url = "http://${path}";
      };
      https = fetchZig {
        inherit name hash;
        url = "https://${path}";
      };
    };
  in
    fetcher.${proto};
in
  linkFarm name [
    {
      name = "vapoursynth-4.0.0-jLYMQw-HAgBK4pMJZBYzTNJuv5uuRlzKqpuY0sd2c_gi";
      path = fetchZigArtifact {
        name = "vapoursynth";
        url = "git+https://github.com/dnjulek/vapoursynth-zig.git#7cb6779c4e40fb7415def9c60162e86ccd0eaa93";
        hash = "sha256-LJr+62vRYl1ZiyLlUn5JUNtqVE8s7PflRy7gucTHGXQ=";
        rev = "7cb6779c4e40fb7415def9c60162e86ccd0eaa93";
      };
    }
  ]
